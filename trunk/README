PixFC-SSE is a cross platform C library which provides SSE-optimised functions
to perform pixel format conversions efficiently.

You provide the input / output buffers and formats, PixFC-SSE selects the best 
conversion function to use based on the features supported by your CPU. In the 
worst case scenario, PixFC-SSE falls back to a standard, non-SSE optimised 
conversion function if the CPU has no SSE features. This way, PixFC-SSE 
guarantees the conversion will always happen.

The latest version of PixFC-SSE can be found at 
http://pixfc-sse.googlecode.com

== BUILD ==
PixFC-SSE uses CMake to support cross-platform builds. PixFC-SSE currently
builds as a static library which you then link to your application. Building
the PixFC-SSE static library depends on the target platform: 
- On Linux platforms, run 'cmake .' to generate a Makefile first. Then run
  'make' to build the static library and test applications.
- On Windows, run 'create_VS_proj.bat' to create a Visual Studio solution, 
  which you then open to build the static library and test applications.
- On Mac, run 'cmake .' to generate a Makefile like on Linux, or run
 'cmake -G "Xcode" .' to generate an XCode project which you then open to build
 the static library and test applications.
- On all platforms, you can generate Eclipse project files by running
 'cmake -G "Eclipse CDT4 - Unix Makefiles" .'
 
More generators are available depending on the target platform. Run 
'cmake --help' for more information.

== EXAMPLE ==
Using PixFC-SSE in your own application is extremely simple. First, build the 
PixFC-SSE static library as described in the previous section. Then, include 
the PixFC-SSE API header file 'pifc-sse.h', and create a struct pixfc to 
perform pixel format conversions. Last, link the PixFC static library to 
your application.
 
example.c shows how to use the PixFC-SSE API.

On Linux, you must also link your executable with -lrt.

== USAGE ==
See pixf-sse.h for details on the PixFC-SSE API, example.c shows how to use
it. Also, you can run timing tests to see how well PixFC-SSE performs on your 
platform: build and run the 'unit-test' target. Please take the time to 
submit unit testing information to the PixFC-SSE mailing list at 
http://groups.google.com/group/pixfc-sse
along with details of your platform (OS version, CPU name & model), compiler 
version and IDE version.

== CONTACT ==
Feedback, comments and suggestions are greatly appreciated.
Please, use the mailing list at 
http://groups.google.com/group/pixfc-sse


